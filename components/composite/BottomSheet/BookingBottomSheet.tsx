import {format} from 'date-fns'
import {ScrollView, StyleSheet, View} from 'react-native'
import Colors from '../../../constants/Colors'
import Layout from '../../../constants/Layout'
import {
  PaymentFor,
  PaymentMethod,
  PaymentStatus,
} from '../../../generated/hooks_and_more'
import {titleCaseToReadable} from '../../../utils/helpers'
import DataRowItem from '../../basic/DataRowItem'
import Icon from '../../basic/Icon'
import {H2, H3} from '../../basic/StyledText'
import {Column} from '../../basic/StyledView'

type BookingBottomSheetProps = {
  typeOfPayment: PaymentFor
  paymentAmount: number
  paymentDate: Date
  paymentMode: PaymentMethod
  paymentReceiptUrl: string
  paymentStatus: PaymentStatus
  confirmedBy: string
  confirmedDate: Date
  closeBottomSheet: () => void
}

export default function BookingBottomSheet({
  typeOfPayment,
  paymentAmount,
  paymentDate,
  paymentReceiptUrl,
  paymentStatus,
  confirmedBy,
  confirmedDate,
  paymentMode,
  closeBottomSheet,
}: BookingBottomSheetProps) {
  return (
    <View>
      <View style={styles.header}>
        <Column>
          <H2>{!!typeOfPayment ? titleCaseToReadable(typeOfPayment) : '-'}</H2>
          <View style={styles.tabSelectedStyle} />
        </Column>

        <Icon iconName="keyboard-arrow-down" onPress={closeBottomSheet} />
      </View>
      <ScrollView>
        <View>
          <DataRowItem
            label="Payment type"
            value={!!typeOfPayment ? titleCaseToReadable(typeOfPayment) : '-'}
          />
          <DataRowItem
            label="Payment date"
            value={
              !!paymentDate ? format(new Date(paymentDate), 'dd MMM yyyy') : '-'
            }
          />
          <DataRowItem
            label="Payment amount"
            value={!!paymentAmount ? paymentAmount?.toLocaleString() : '-'}
          />
          <DataRowItem
            label="Payment mode"
            value={!!paymentMode ? titleCaseToReadable(paymentMode) : '-'}
          />
          {paymentMode !== PaymentMethod.Cash && (
            <DataRowItem
              label={
                typeOfPayment === PaymentFor.BookingLoan
                  ? 'Delivery Order'
                  : 'Payment Proof'
              }
              value={!!paymentReceiptUrl ? paymentReceiptUrl : '-'}
              isDoc
            />
          )}
          {/* According to design and argument by PM, Payment receipt is to generated by system on each and every kind of Payment 
          TODO It will show receipt generated by system*/}
          <DataRowItem label="Payment Receipt" value={'-'} />
        </View>

        <View style={styles.separator} />

        <View>
          <H3 style={{paddingHorizontal: Layout.baseSize}}>
            Reconciliation History
          </H3>
          <DataRowItem
            label="Status"
            value={!!paymentStatus ? titleCaseToReadable(paymentStatus) : '-'}
          />
          <DataRowItem label="Confirmed by" value={confirmedBy ?? '-'} />
          <DataRowItem
            label="Confirmation date"
            value={
              !!confirmedDate
                ? format(new Date(confirmedDate), 'dd MMM yyyy')
                : '-'
            }
          />
        </View>
      </ScrollView>
    </View>
  )
}

const styles = StyleSheet.create({
  container: {
    padding: Layout.baseSize,
    backgroundColor: Colors.light.background,
  },
  header: {
    paddingHorizontal: Layout.baseSize / 2,
    paddingVertical: Layout.baseSize,
    justifyContent: 'space-between',
    flexDirection: 'row',
  },
  tabSelectedStyle: {
    height: Layout.baseSize / 9,
    width: Layout.baseSize * 3,
    marginTop: Layout.baseSize / 5,
    backgroundColor: Colors.light.tabIconSelected,
  },
  separator: {
    margin: Layout.baseSize * 0.5,
    height: 1,
    backgroundColor: Colors.light.primary,
  },
})
